{
  "version": 3,
  "sources": ["../../lenis/src/maths.js", "../../lenis/src/animate.js", "../../lenis/src/dimensions.js", "../../lenis/src/debounce.js", "../../lenis/src/emitter.js", "../../lenis/src/virtual-scroll.js", "../../lenis/src/index.ts"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener('resize', this.debouncedResize, false)\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener('resize', this.debouncedResize, false)\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  constructor(element, { wheelMultiplier = 1, touchMultiplier = 1 }) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n", "import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\n\r\nexport type LenisOptions = {\r\n  wrapper?: Window | HTMLElement\r\n  content?: HTMLElement\r\n  wheelEventsTarget?: Window | HTMLElement\r\n  eventsTarget?: Window | HTMLElement\r\n  smoothWheel?: boolean\r\n  syncTouch?: boolean\r\n  syncTouchLerp?: number\r\n  touchInertiaMultiplier?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  lerp?: number\r\n  infinite?: boolean\r\n  orientation?: Orientation\r\n  gestureOrientation?: GestureOrientation\r\n  touchMultiplier?: number\r\n  wheelMultiplier?: number\r\n  autoResize?: boolean\r\n  prevent?: boolean | ((node: Element) => boolean)\r\n  __experimental__naiveDimensions?: boolean\r\n}\r\n\r\nexport default class Lenis {\r\n  // __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: boolean | 'native' | 'smooth' = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  time: number\r\n  userData: object\r\n  lastVelocity: number\r\n  velocity: number\r\n  direction: 1 | -1 | undefined\r\n  options: LenisOptions\r\n  targetScroll: number\r\n  animatedScroll: number\r\n  // animate: Animate\r\n  // emitter: Emitter\r\n  // dimensions: Dimensions\r\n  // virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent = false,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      __experimental__naiveDimensions,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    // this.toggleClassName('lenis', true)\r\n    this.updateClassName()\r\n\r\n    this.userData = {}\r\n    this.time = 0\r\n    this.velocity = this.lastVelocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    // this.hasScrolled = false\r\n    // this.isSmooth = syncTouch || smoothWheel\r\n    // this.isSmooth = false\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n\r\n    // this.rootElement.className = ''\r\n\r\n    // this.toggleClassName('lenis', false)\r\n    // this.toggleClassName('lenis-smooth', false)\r\n    // this.toggleClassName('lenis-scrolling', false)\r\n    // this.toggleClassName('lenis-stopped', false)\r\n    // this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          (typeof prevent === 'function' ? prevent?.(node) : prevent) ||\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          (node.classList?.contains('lenis') &&\r\n            !node.classList?.contains('lenis-stopped')) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit({ userData = {} } = {}) {\r\n    this.userData = userData\r\n    this.emitter.emit('scroll', this)\r\n    this.userData = {}\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    clearTimeout(this.__resetVelocityTimeout)\r\n    delete this.__resetVelocityTimeout\r\n\r\n    if (this.__preventNextNativeScrollEvent) {\r\n      delete this.__preventNextNativeScrollEvent\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      // this.isSmooth = false\r\n      // this.isScrolling = this.hasScrolled ? 'native' : false\r\n      this.isScrolling = 'native'\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this.__resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n\r\n      // this.hasScrolled = true\r\n      // }, 50)\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData = {},\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onStart?: (lenis: Lenis) => void\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n      userData?: object\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (target === this.targetScroll) return\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit({ userData })\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit({ userData })\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextNativeScrollEvent = true\r\n          // requestAnimationFrame(() => {\r\n          //   delete this.__preventNextNativeScrollEvent\r\n          // })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll(): number {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll(): number {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress(): number {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  // get isSmooth() {\r\n  //   return this.__isSmooth\r\n  // }\r\n\r\n  // private set isSmooth(value: boolean) {\r\n  //   if (this.__isSmooth !== value) {\r\n  //     this.__isSmooth = value\r\n  //     this.updateClassName()\r\n  //   }\r\n  // }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: boolean) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    // if (this.isScrolling === 'native') className += ' lenis-native'\r\n    // if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n    // this.emitter.emit('className change', this)\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n\r\n  // private toggleClassName(name: string, value: boolean) {\r\n  //   // this.rootElement.classList.toggle(name, value)\r\n  //   this.rootElement.className = this.className\r\n  //   this.emitter.emit('className change', this)\r\n  // }\r\n}\r\n"],
  "mappings": ";;;;;AACO,SAASA,MAAMC,IAAKC,GAAOC,GAAAA;AAChC,SAAOC,KAAKD,IAAIF,IAAKG,KAAKH,IAAIC,GAAOC,CAAAA,CAAAA;AACvC;ACAO,IAAME,UAAN,MAAMA;EAEX,QAAQC,IAAAA;ADJH;ACKH,QAAA,CAAKC,KAAKC;AAAW;AAErB,QAAIC,IAAAA;AAEJ,QAAIF,KAAKG;AACPH,WAAKI,QDKJ,SAASC,KAAKC,IAAGC,IAAGC,GAAQC,GAAAA;AACjC,eANK,SAASN,KAAKG,IAAGC,IAAGG,IAAAA;AACzB,kBAAQ,IAAIA,MAAKJ,KAAII,KAAIH;QAC3B,EAIcD,IAAGC,IAAG,IAAIV,KAAKc,IAAAA,CAAKH,IAASC,CAAAA,CAAAA;MAC3C,ECPwBT,KAAKI,OAAOJ,KAAKY,IAAgB,KAAZZ,KAAKG,MAAWJ,EAAAA,GACnDF,KAAKgB,MAAMb,KAAKI,KAAAA,MAAWJ,KAAKY,OAClCZ,KAAKI,QAAQJ,KAAKY,IAClBV,IAAAA;SAEG;AACLF,WAAKc,eAAef;AACpB,YAAMgB,IAAiBtB,MAAM,GAAGO,KAAKc,cAAcd,KAAKgB,UAAU,CAAA;AAElEd,UAAYa,KAAkB;AAC9B,YAAME,IAAgBf,IAAY,IAAIF,KAAKkB,OAAOH,CAAAA;AAClDf,WAAKI,QAAQJ,KAAKmB,QAAQnB,KAAKY,KAAKZ,KAAKmB,QAAQF;IAClD;AAEGf,SACFF,KAAKoB,KAAAA,IAIPpB,UAAKqB,aAALrB,8BAAgBA,KAAKI,OAAOF;EAC7B;EAGD,OAAAkB;AACEpB,SAAKC,YAAAA;EACN;EAID,OACEkB,IACAP,GAAAA,EACAT,MAAEA,IAAO,KAAGa,UAAEA,IAAW,GAACE,QAAEA,IAAUR,CAAAA,OAAMA,IAACY,SAAEA,GAAOD,UAAEA,EAAAA,GAAAA;AAExDrB,SAAKmB,OAAOnB,KAAKI,QAAQe,IACzBnB,KAAKY,KAAKA,GACVZ,KAAKG,OAAOA,GACZH,KAAKgB,WAAWA,GAChBhB,KAAKkB,SAASA,GACdlB,KAAKc,cAAc,GACnBd,KAAKC,YAAAA,MAELqB,0BACAtB,KAAKqB,WAAWA;EACjB;AAAA;ACrDI,IAAME,aAAN,MAAMA;EACX,YAAAC,EAAYC,SACVA,IAAOC,SACPA,GAAOC,YACPA,IAAAA,MACAC,UAAUC,IAAgB,IAAA,IACxB,CAAA,GAAA;AA2BJC,kCAAS,MAAA;AACP9B,WAAK+B,gBAAAA,GACL/B,KAAKgC,gBAAAA;IAAiB;AAGxBD,2CAAkB,MAAA;AACZ/B,WAAKyB,YAAYQ,UACnBjC,KAAKkC,QAAQD,OAAOE,YACpBnC,KAAKoC,SAASH,OAAOI,gBAErBrC,KAAKkC,QAAQlC,KAAKyB,QAAQa,aAC1BtC,KAAKoC,SAASpC,KAAKyB,QAAQc;IAC5B;AAGHP,2CAAkB,MAAA;AACZhC,WAAKyB,YAAYQ,UACnBjC,KAAKwC,eAAexC,KAAK0B,QAAQc,cACjCxC,KAAKyC,cAAczC,KAAK0B,QAAQe,gBAEhCzC,KAAKwC,eAAexC,KAAKyB,QAAQe,cACjCxC,KAAKyC,cAAczC,KAAKyB,QAAQgB;IACjC;AAhDDzC,SAAKyB,UAAUA,IACfzB,KAAK0B,UAAUA,GAEXC,MACF3B,KAAK0C,kBCbJ,SAASd,SAASe,IAAUC,IAAAA;AACjC,UAAIC;AACJ,aAAO,WAAA;AACL,YAAIC,KAAOC,WACPC,IAAUhD;AACdiD,qBAAaJ,EAAAA,GACbA,KAAQK,WAAW,WAAA;AACjBP,UAAAA,GAASQ,MAAMH,GAASF,EAAAA;QACzB,GAAEF,EAAAA;MACJ;IACH,EDGsC5C,KAAK8B,QAAQD,CAAAA,GAEzC7B,KAAKyB,YAAYQ,SACnBA,OAAOmB,iBAAiB,UAAUpD,KAAK0C,iBAAAA,KAAiB,KAExD1C,KAAKqD,wBAAwB,IAAIC,eAAetD,KAAK0C,eAAAA,GACrD1C,KAAKqD,sBAAsBE,QAAQvD,KAAKyB,OAAAA,IAG1CzB,KAAKwD,wBAAwB,IAAIF,eAAetD,KAAK0C,eAAAA,GACrD1C,KAAKwD,sBAAsBD,QAAQvD,KAAK0B,OAAAA,IAG1C1B,KAAK8B,OAAAA;EACN;EAED,UAAA2B;AF5BK;AE6BHzD,eAAKqD,0BAALrD,mBAA4B0D,eAC5B1D,UAAKwD,0BAALxD,mBAA4B0D,cAC5BzB,OAAO0B,oBAAoB,UAAU3D,KAAK0C,iBAAAA,KAAiB;EAC5D;EA2BD,IAAA,QAAIkB;AACF,WAAO,EACLtD,GAAGN,KAAKyC,cAAczC,KAAKkC,OAC3B3B,GAAGP,KAAKwC,eAAexC,KAAKoC,OAAAA;EAE/B;AAAA;AEjEI,IAAMyB,UAAN,MAAMA;EACX,cAAArC;AACExB,SAAK8D,SAAS,CAAE;EACjB;EAED,KAAKC,OAAUjB,GAAAA;AACb,QAAIkB,IAAYhE,KAAK8D,OAAOC,EAAAA,KAAU,CAAA;AACtC,aAASE,KAAI,GAAGC,IAASF,EAAUE,QAAQD,KAAIC,GAAQD;AACrDD,QAAUC,EAAAA,EAAAA,GAAMnB,CAAAA;EAEnB;EAED,GAAGiB,IAAOI,GAAAA;AJXL;AIgBH,aAHAnE,UAAK8D,OAAOC,EAAAA,MAAZ/D,mBAAoBoE,KAAKD,QAAQnE,KAAK8D,OAAOC,EAAAA,IAAS,CAACI,CAAAA,IAGhD,MAAA;AJhBJ,UAAAE;AIiBDrE,WAAK8D,OAAOC,EAAAA,KAAS/D,MAAAA,KAAK8D,OAAOC,EAAAA,MAAZ/D,gBAAAA,IAAoBsE,OAAQL,CAAAA,OAAME,MAAOF;IAAE;EAEnE;EAED,IAAIF,IAAOpB,GAAAA;AJrBN;AIsBH3C,SAAK8D,OAAOC,EAAAA,KAAS/D,UAAK8D,OAAOC,EAAAA,MAAZ/D,mBAAoBsE,OAAQL,CAAAA,OAAMtB,MAAasB;EACrE;EAED,UAAAR;AACEzD,SAAK8D,SAAS,CAAE;EACjB;AAAA;AC1BH,IAAMS,IAAc,MAAM;AAEnB,IAAMC,gBAAN,MAAMA;EACX,YAAYC,IAAAA,EAASC,iBAAEA,IAAkB,GAACC,iBAAEA,IAAkB,EAAA,GAAA;AAoD9DC,wCAAgBb,CAAAA,OAAAA;AACd,YAAA,EAAMc,SAAEA,GAAOC,SAAEA,EAAAA,IAAYf,GAAMgB,gBAC/BhB,GAAMgB,cAAc,CAAA,IACpBhB;AAEJ/D,WAAKgF,WAAW1E,IAAIuE,GACpB7E,KAAKgF,WAAWzE,IAAIuE,GAEpB9E,KAAKiF,YAAY,EACf3E,GAAG,GACHC,GAAG,EAAA,GAGLP,KAAKkF,QAAQC,KAAK,UAAU,EAC1BC,QAAQ,GACRC,QAAQ,GACRtB,OAAAA,GAAAA,CAAAA;IACA;AAIJuB,uCAAevB,CAAAA,OAAAA;AACb,YAAA,EAAMc,SAAEA,GAAOC,SAAEA,EAAAA,IAAYf,GAAMgB,gBAC/BhB,GAAMgB,cAAc,CAAA,IACpBhB,IAEEqB,IAAAA,EAAWP,IAAU7E,KAAKgF,WAAW1E,KAAKN,KAAK2E,iBAC/CU,IAAAA,EAAWP,IAAU9E,KAAKgF,WAAWzE,KAAKP,KAAK2E;AAErD3E,WAAKgF,WAAW1E,IAAIuE,GACpB7E,KAAKgF,WAAWzE,IAAIuE,GAEpB9E,KAAKiF,YAAY,EACf3E,GAAG8E,GACH7E,GAAG8E,EAAAA,GAGLrF,KAAKkF,QAAQC,KAAK,UAAU,EAC1BC,QAAAA,GACAC,QAAAA,GACAtB,OAAAA,GAAAA,CAAAA;IACA;AAGJwB,sCAAcxB,CAAAA,OAAAA;AACZ/D,WAAKkF,QAAQC,KAAK,UAAU,EAC1BC,QAAQpF,KAAKiF,UAAU3E,GACvB+E,QAAQrF,KAAKiF,UAAU1E,GACvBwD,OAAAA,GAAAA,CAAAA;IACA;AAIJyB,mCAAWzB,OAAAA;AACT,UAAA,EAAIqB,QAAEA,GAAMC,QAAEA,GAAMI,WAAEA,EAAAA,IAAc1B;AAOpCqB,WAJgB,MAAdK,IAAkBlB,IAA4B,MAAdkB,IAAkBzF,KAAK0F,cAAc,GAKvEL,KAHgB,MAAdI,IAAkBlB,IAA4B,MAAdkB,IAAkBzF,KAAK2F,eAAe,GAKxEP,KAAUpF,KAAK0E,iBACfW,KAAUrF,KAAK0E,iBAEf1E,KAAKkF,QAAQC,KAAK,UAAU,EAAEC,QAAAA,GAAQC,QAAAA,GAAQtB,OAAAA,EAAAA,CAAAA;IAAQ;AAGxD6B,0CAAiB,MAAA;AACf5F,WAAK0F,cAAczD,OAAOE,YAC1BnC,KAAK2F,eAAe1D,OAAOI;IAAW;AA3HtCrC,SAAKyE,UAAUA,IACfzE,KAAK0E,kBAAkBA,GACvB1E,KAAK2E,kBAAkBA,GAEvB3E,KAAKgF,aAAa,EAChB1E,GAAG,MACHC,GAAG,KAAA,GAGLP,KAAKkF,UAAU,IAAIrB,WACnB5B,OAAOmB,iBAAiB,UAAUpD,KAAK4F,gBAAAA,KAAgB,GACvD5F,KAAK4F,eAAAA,GAEL5F,KAAKyE,QAAQrB,iBAAiB,SAASpD,KAAKwF,SAAS,EAAEK,SAAAA,MAAS,CAAA,GAChE7F,KAAKyE,QAAQrB,iBAAiB,cAAcpD,KAAK4E,cAAc,EAC7DiB,SAAAA,MAAS,CAAA,GAEX7F,KAAKyE,QAAQrB,iBAAiB,aAAapD,KAAKsF,aAAa,EAC3DO,SAAAA,MAAS,CAAA,GAEX7F,KAAKyE,QAAQrB,iBAAiB,YAAYpD,KAAKuF,YAAY,EACzDM,SAAAA,MAAS,CAAA;EAEZ;EAGD,GAAG9B,IAAOpB,GAAAA;AACR,WAAO3C,KAAKkF,QAAQY,GAAG/B,IAAOpB,CAAAA;EAC/B;EAGD,UAAAc;AACEzD,SAAKkF,QAAQzB,QAAAA,GAEbxB,OAAO0B,oBAAoB,UAAU3D,KAAK4F,gBAAAA,KAAgB,GAE1D5F,KAAKyE,QAAQd,oBAAoB,SAAS3D,KAAKwF,SAAS,EACtDK,SAAAA,MAAS,CAAA,GAEX7F,KAAKyE,QAAQd,oBAAoB,cAAc3D,KAAK4E,cAAc,EAChEiB,SAAAA,MAAS,CAAA,GAEX7F,KAAKyE,QAAQd,oBAAoB,aAAa3D,KAAKsF,aAAa,EAC9DO,SAAAA,MAAS,CAAA,GAEX7F,KAAKyE,QAAQd,oBAAoB,YAAY3D,KAAKuF,YAAY,EAC5DM,SAAAA,MAAS,CAAA;EAEZ;AA2EuC;ACxF5B,IAAOE,QAAP,MAAOA;EAmBnB,YAAAvE,EAAYC,SACVA,KAAUQ,QAAMP,SAChBA,IAAUsE,SAASC,iBAAeC,mBAClCA,IAAoBzE,IAAO0E,cAC3BA,IAAeD,GAAiBE,aAChCA,IAAAA,MAAkBC,WAClBA,IAAAA,OAAiBC,eACjBA,IAAgB,OAAKC,wBACrBA,IAAyB,IAAEvF,UAC3BA,GAAQE,QACRA,IAAUR,CAAAA,OAAMb,KAAKH,IAAI,GAAG,QAAQG,KAAK2G,IAAI,GAAA,MAAS9F,EAAAA,CAAAA,GAAGP,MACzDA,IAAAA,CAAQa,KAAY,KAAGyF,UACvBA,IAAAA,OAAgBC,aAChBA,IAAc,YAAUC,oBACxBA,IAAqB,YAAUhC,iBAC/BA,IAAkB,GAACD,iBACnBA,IAAkB,GAAC/C,YACnBA,IAAAA,MAAiBiF,SACjBA,IAAAA,OAAeC,iCACfA,IAAAA,MAAkC,IAClB,CAAA,GAAA;AArClB7G,SAAA8G,gBAAAA,OACA9G,KAAA+G,cAAAA,OACA/G,KAAAgH,aAAAA,OAmIQhH,KAAeiH,kBAAG,CAAA,EAAG7B,QAAAA,IAAQC,QAAAA,IAAQtB,OAAAA,GAAAA,MAAAA;AAE3C,UAAIA,GAAMmD;AAAS;AAEnB,YAAMC,KAAUpD,GAAMqD,KAAKC,SAAS,OAAA,GAC9BC,KAAUvD,GAAMqD,KAAKC,SAAS,OAAA;AAEpCrH,WAAKuH,aAA4B,iBAAfxD,GAAMqD,QAAwC,gBAAfrD,GAAMqD;AAkBvD,UANEpH,KAAKwH,QAAQnB,aACbc,MACe,iBAAfpD,GAAMqD,QAAAA,CACLpH,KAAKyH,aAAAA,CACLzH,KAAK0H;AAIN,eAAA,KADA1H,KAAK2H,MAAAA;AAIP,YAAMC,KAAqB,MAAXxC,MAA2B,MAAXC,IAQ1BwC,KACiC,eAApC7H,KAAKwH,QAAQb,sBAAgD,MAAXtB,MACd,iBAApCrF,KAAKwH,QAAQb,sBAAkD,MAAXvB;AAEvD,UAAIwC,MAAWC;AAEb;AAIF,UAAIC,KAAe/D,GAAM+D,aAAAA;AACzBA,MAAAA,KAAeA,GAAaC,MAAM,GAAGD,GAAaE,QAAQhI,KAAKiI,WAAAA,CAAAA;AAE/D,YAAMrB,KAAU5G,KAAKwH,QAAQZ;AAE7B,UACIkB,GAAaI,KACZC,CAAAA,OAAAA;AAAAA,YAAAA,IAAAA,IAAAA,IAAAA,IAAAA;AACC,gBAAoB,cAAA,OAAZvB,KAAyBA,QAAAA,KAAAA,SAAAA,GAAUuB,EAAAA,IAAQvB,QAC/B,UAApBvC,KAAA8D,GAAKC,iBAAAA,WAAe/D,KAAAA,SAAAA,GAAAgE,KAAAF,IAAA,oBAAA,MACnBhB,OAA+B,UAApBmB,KAAAH,GAAKC,iBAAAA,WAAeE,KAAAA,SAAAA,GAAAD,KAAAF,IAAA,0BAAA,MAC/Bb,OAA+B,UAApBiB,KAAAJ,GAAKC,iBAAAA,WAAeG,KAAAA,SAAAA,GAAAF,KAAAF,IAAA,0BAAA,OACf,UAAAK,KAAhBL,GAAKM,cAAAA,WAAWC,KAAAA,SAAAA,GAAAC,SAAS,OAAA,MAAA,EACT,UAAdC,KAAAT,GAAKM,cAAAA,WAASG,KAAAA,SAAAA,GAAED,SAAS,eAAA;MAAiB,CAAA;AAGjD;AAEF,UAAI3I,KAAKyH,aAAazH,KAAK0H;AAEzB,eAAA,KADA3D,GAAM8E,eAAAA;AAQR,UAAA,EAHG7I,KAAKwH,QAAQnB,aAAac,MAC1BnH,KAAKwH,QAAQpB,eAAekB;AAK7B,eAFAtH,KAAK8I,cAAc,UAAA,KACnB9I,KAAK+I,QAAQ3H,KAAAA;AAIf2C,MAAAA,GAAM8E,eAAAA;AAEN,UAAIG,KAAQ3D;AAC4B,iBAApCrF,KAAKwH,QAAQb,qBACfqC,KAAQnJ,KAAKoJ,IAAI5D,EAAAA,IAAUxF,KAAKoJ,IAAI7D,EAAAA,IAAUC,KAASD,KACV,iBAApCpF,KAAKwH,QAAQb,uBACtBqC,KAAQ5D;AAGV,YAAMiB,KAAYc,MAAWnH,KAAKwH,QAAQnB,WAGpC6C,KAFa/B,MAA0B,eAAfpD,GAAMqD,QAEEvH,KAAKoJ,IAAID,EAAAA,IAAS;AAEpDE,MAAAA,OACFF,KAAQhJ,KAAKmJ,WAAWnJ,KAAKwH,QAAQjB,yBAGvCvG,KAAKoJ,SAASpJ,KAAKqJ,eAAeL,IAAKM,OAAAC,OAAA,EACrCC,cAAAA,MAAc,GACVnD,KACA,EACElG,MAAM+I,KAAkBlJ,KAAKwH,QAAQlB,gBAAgB,EAAA,IAEvD,EACEnG,MAAMH,KAAKwH,QAAQrH,MACnBa,UAAUhB,KAAKwH,QAAQxG,UACvBE,QAAQlB,KAAKwH,QAAQtG,OAAAA,CAAAA,CAAAA;IAE3B,GAaIlB,KAAcyJ,iBAAG,MAAA;AAIvB,UAHAxG,aAAajD,KAAK0J,sBAAAA,GAAAA,OACX1J,KAAK0J,wBAER1J,KAAK2J;AAAAA,eACA3J,KAAK2J;eAId,UAAI3J,KAAK8I,eAA8C,aAArB9I,KAAK8I,aAA0B;AAC/D,cAAMc,KAAa5J,KAAK6J;AACxB7J,aAAK6J,iBAAiB7J,KAAKqJ,eAAerJ,KAAK8J,cAC/C9J,KAAK+J,eAAe/J,KAAKmJ,UACzBnJ,KAAKmJ,WAAWnJ,KAAK6J,iBAAiBD,IACtC5J,KAAKgK,YAAYnK,KAAKoK,KAAKjK,KAAK6J,iBAAiBD,EAAAA,GAGjD5J,KAAK8I,cAAc,UACnB9I,KAAKmF,KAAAA,GAEiB,MAAlBnF,KAAKmJ,aACPnJ,KAAK0J,yBAAyBxG,WAAW,MAAA;AACvClD,eAAK+J,eAAe/J,KAAKmJ,UACzBnJ,KAAKmJ,WAAW,GAChBnJ,KAAK8I,cAAAA,OACL9I,KAAKmF,KAAAA;QAAM,GACV,GAAA;MAKN;IAAA,GAzPDlD,OAAOiI,eAAAA,SAGHzI,OAAYuE,SAASC,mBAAmBxE,OAAYuE,SAASmE,SAC/D1I,KAAUQ,SAGZjC,KAAKwH,UAAU,EACb/F,SAAAA,IACAC,SAAAA,GACAwE,mBAAAA,GACAC,cAAAA,GACAC,aAAAA,GACAC,WAAAA,GACAC,eAAAA,GACAC,wBAAAA,GACAvF,UAAAA,GACAE,QAAAA,GACAf,MAAAA,GACAsG,UAAAA,GACAE,oBAAAA,GACAD,aAAAA,GACA/B,iBAAAA,GACAD,iBAAAA,GACA/C,YAAAA,GACAiF,SAAAA,GACAC,iCAAAA,EAAAA,GAGF7G,KAAK+I,UAAU,IAAIjJ,WACnBE,KAAKkF,UAAU,IAAIrB,WACnB7D,KAAKoK,aAAa,IAAI7I,WAAW,EAAEE,SAAAA,IAASC,SAAAA,GAASC,YAAAA,EAAAA,CAAAA,GAErD3B,KAAKqK,gBAAAA,GAELrK,KAAKsK,WAAW,CAAA,GAChBtK,KAAKuK,OAAO,GACZvK,KAAKmJ,WAAWnJ,KAAK+J,eAAe,GACpC/J,KAAK0H,WAAAA,OACL1H,KAAKyH,YAAAA,OAILzH,KAAK8I,cAAAA,OACL9I,KAAKqJ,eAAerJ,KAAK6J,iBAAiB7J,KAAK8J,cAE/C9J,KAAKwH,QAAQ/F,QAAQ2B,iBAAiB,UAAUpD,KAAKyJ,gBAAAA,KAAgB,GAErEzJ,KAAKwK,gBAAgB,IAAIhG,cAAc2B,GAAc,EACnDxB,iBAAAA,GACAD,iBAAAA,EAAAA,CAAAA,GAEF1E,KAAKwK,cAAc1E,GAAG,UAAU9F,KAAKiH,eAAAA;EACtC;EAED,UAAAxD;AACEzD,SAAKkF,QAAQzB,QAAAA,GAEbzD,KAAKwH,QAAQ/F,QAAQkC,oBACnB,UACA3D,KAAKyJ,gBAAAA,KACL,GAGFzJ,KAAKwK,cAAc/G,QAAAA,GACnBzD,KAAKoK,WAAW3G,QAAAA,GAEhBzD,KAAKyK,iBAAAA;EASN;EAED,GAAG1G,IAAepB,GAAAA;AAChB,WAAO3C,KAAKkF,QAAQY,GAAG/B,IAAOpB,CAAAA;EAC/B;EAED,IAAIoB,IAAepB,GAAAA;AACjB,WAAO3C,KAAKkF,QAAQwF,IAAI3G,IAAOpB,CAAAA;EAChC;EAEO,UAAUgI,IAAAA;AAEZ3K,SAAK4K,eACP5K,KAAKiI,YAAY4C,aAAaF,KAE9B3K,KAAKiI,YAAY6C,YAAYH;EAEhC;EAmHD,SAAA7I;AACE9B,SAAKoK,WAAWtI,OAAAA;EACjB;EAEO,KAAAqD,EAAKmF,UAAEA,KAAW,CAAE,EAAA,IAAK,CAAA,GAAA;AAC/BtK,SAAKsK,WAAWA,IAChBtK,KAAKkF,QAAQC,KAAK,UAAUnF,IAAAA,GAC5BA,KAAKsK,WAAW,CAAA;EACjB;EAoCO,QAAA3C;AACN3H,SAAK0H,WAAAA,OACL1H,KAAK8I,cAAAA,OACL9I,KAAK6J,iBAAiB7J,KAAKqJ,eAAerJ,KAAK8J,cAC/C9J,KAAK+J,eAAe/J,KAAKmJ,WAAW,GACpCnJ,KAAK+I,QAAQ3H,KAAAA;EACd;EAED,QAAA2J;AACO/K,SAAKyH,cACVzH,KAAKyH,YAAAA,OAELzH,KAAK2H,MAAAA;EACN;EAED,OAAAvG;AACMpB,SAAKyH,cACTzH,KAAKyH,YAAAA,MACLzH,KAAK+I,QAAQ3H,KAAAA,GAEbpB,KAAK2H,MAAAA;EACN;EAED,IAAI4C,IAAAA;AACF,UAAMxK,IAAYwK,MAAQvK,KAAKuK,QAAQA;AACvCvK,SAAKuK,OAAOA,IAEZvK,KAAK+I,QAAQiC,QAAoB,OAAZjL,CAAAA;EACtB;EAED,SACEkL,IAAAA,EACAC,QACEA,IAAS,GAACC,WACVA,IAAAA,OAAiBC,MACjBA,IAAAA,OAAYpK,UACZA,IAAWhB,KAAKwH,QAAQxG,UAAQE,QAChCA,IAASlB,KAAKwH,QAAQtG,QAAMf,MAC5BA,IAAAA,CAAQa,KAAYhB,KAAKwH,QAAQrH,MAAImB,SACrCA,GAAO+J,YACPA,GAAUC,OACVA,IAAAA,OAAa9B,cACbA,IAAAA,MAAmBc,UACnBA,IAAW,CAAA,EAAA,IAaT,CAAA,GAAA;AAEJ,QAAA,CAAKtK,KAAKyH,aAAAA,CAAazH,KAAK0H,YAAc4D,GAA1C;AAGA,UAAI,CAAC,OAAO,QAAQ,OAAA,EAASjE,SAAS4D,EAAAA;AACpCA,QAAAA,KAAS;eACA,CAAC,UAAU,SAAS,KAAA,EAAO5D,SAAS4D,EAAAA;AAC7CA,QAAAA,KAASjL,KAAK4D;WACT;AACL,YAAIuE;AAUJ,YARsB,YAAA,OAAX8C,KAET9C,KAAOnC,SAASuF,cAAcN,EAAAA,KACrBA,QAAAA,KAAAA,SAAAA,GAAQO,cAEjBrD,KAAO8C,KAGL9C,IAAM;AACR,cAAInI,KAAKwH,QAAQ/F,YAAYQ,QAAQ;AAEnC,kBAAMwJ,KAAczL,KAAKwH,QAAQ/F,QAAQiK,sBAAAA;AACzCR,iBAAUlL,KAAK4K,eAAea,GAAYE,OAAOF,GAAYG;UAC9D;AAED,gBAAMC,KAAO1D,GAAKuD,sBAAAA;AAElBT,UAAAA,MACGjL,KAAK4K,eAAeiB,GAAKF,OAAOE,GAAKD,OAAO5L,KAAK6J;QACrD;MACF;AAED,UAAsB,YAAA,OAAXoB,IAAX;AAaA,YAXAA,MAAUC,GACVD,KAASpL,KAAKgB,MAAMoK,EAAAA,GAEhBjL,KAAKwH,QAAQf,WACX+C,MACFxJ,KAAKqJ,eAAerJ,KAAK6J,iBAAiB7J,KAAK2K,UAGjDM,KAASxL,MAAM,GAAGwL,IAAQjL,KAAK4D,KAAAA,GAG7BuH;AAKF,iBAJAnL,KAAK6J,iBAAiB7J,KAAKqJ,eAAe4B,IAC1CjL,KAAK8L,UAAU9L,KAAK2K,MAAAA,GACpB3K,KAAK2H,MAAAA,GAAAA,MACL0D,QAAAA,KAAAA,EAAarL,IAAAA;AAIXiL,QAAAA,OAAWjL,KAAKqJ,iBAEfG,MACHxJ,KAAKqJ,eAAe4B,KAGtBjL,KAAK+I,QAAQgD,OAAO/L,KAAK6J,gBAAgBoB,IAAQ,EAC/CjK,UAAAA,GACAE,QAAAA,GACAf,MAAAA,GACAmB,SAAS,MAAA;AAEH8J,gBAAMpL,KAAK0H,WAAAA,OACf1H,KAAK8I,cAAc,UACnBxH,QAAAA,KAAAA,EAAUtB,IAAAA;QAAK,GAEjBqB,UAAU,CAACjB,IAAeF,OAAAA;AACxBF,eAAK8I,cAAc,UAGnB9I,KAAK+J,eAAe/J,KAAKmJ,UACzBnJ,KAAKmJ,WAAW/I,KAAQJ,KAAK6J,gBAC7B7J,KAAKgK,YAAYnK,KAAKoK,KAAKjK,KAAKmJ,QAAAA,GAEhCnJ,KAAK6J,iBAAiBzJ,IACtBJ,KAAK8L,UAAU9L,KAAK2K,MAAAA,GAEhBnB,MAEFxJ,KAAKqJ,eAAejJ,KAGjBF,MAAWF,KAAKmF,KAAK,EAAEmF,UAAAA,EAAAA,CAAAA,GAExBpK,OACFF,KAAK2H,MAAAA,GACL3H,KAAKmF,KAAK,EAAEmF,UAAAA,EAAAA,CAAAA,GACZe,QAAAA,KAAAA,EAAarL,IAAAA,GAGbA,KAAK2J,iCAAAA;QAIN,EAAA,CAAA;MAjEiC;IAhCiB;EAoGxD;EAED,IAAA,cAAI1B;AACF,WAAOjI,KAAKwH,QAAQ/F,YAAYQ,SAC5B+D,SAASC,kBACTjG,KAAKwH,QAAQ/F;EAClB;EAED,IAAA,QAAImC;AACF,WAAI5D,KAAKwH,QAAQX,kCACX7G,KAAK4K,eACA5K,KAAKiI,YAAYxF,cAAczC,KAAKiI,YAAY3F,cAEhDtC,KAAKiI,YAAYzF,eAAexC,KAAKiI,YAAY1F,eAGnDvC,KAAKoK,WAAWxG,MAAM5D,KAAK4K,eAAe,MAAM,GAAA;EAE1D;EAED,IAAA,eAAIA;AACF,WAAoC,iBAA7B5K,KAAKwH,QAAQd;EACrB;EAED,IAAA,eAAIoD;AAEF,WAAO9J,KAAK4K,eACR5K,KAAKiI,YAAY4C,aACjB7K,KAAKiI,YAAY6C;EACtB;EAED,IAAA,SAAIH;AACF,WAAO3K,KAAKwH,QAAQf,WNrfjB,SAASuF,OAAOC,IAAGC,GAAAA;AACxB,cAASD,KAAIC,IAAKA,KAAKA;IACzB,EMofelM,KAAK6J,gBAAgB7J,KAAK4D,KAAAA,IACjC5D,KAAK6J;EACV;EAED,IAAA,WAAIsC;AAEF,WAAsB,MAAfnM,KAAK4D,QAAc,IAAI5D,KAAK2K,SAAS3K,KAAK4D;EAClD;EAaD,IAAA,cAAIkF;AACF,WAAO9I,KAAK8G;EACb;EAED,IAAA,YAAwB1G,IAAAA;AAClBJ,SAAK8G,kBAAkB1G,OACzBJ,KAAK8G,gBAAgB1G,IACrBJ,KAAKqK,gBAAAA;EAER;EAED,IAAA,YAAI5C;AACF,WAAOzH,KAAK+G;EACb;EAED,IAAA,UAAsB3G,IAAAA;AAChBJ,SAAK+G,gBAAgB3G,OACvBJ,KAAK+G,cAAc3G,IACnBJ,KAAKqK,gBAAAA;EAER;EAED,IAAA,WAAI3C;AACF,WAAO1H,KAAKgH;EACb;EAED,IAAA,SAAqB5G,IAAAA;AACfJ,SAAKgH,eAAe5G,OACtBJ,KAAKgH,aAAa5G,IAClBJ,KAAKqK,gBAAAA;EAER;EAED,IAAA,WAAI+B;AACF,WAA4B,aAArBpM,KAAK8I;EACb;EAED,IAAA,YAAIuD;AACF,QAAIA,KAAY;AAOhB,WANIrM,KAAKyH,cAAW4E,MAAa,mBAC7BrM,KAAK0H,aAAU2E,MAAa,kBAC5BrM,KAAK8I,gBAAauD,MAAa,qBACV,aAArBrM,KAAK8I,gBAA0BuD,MAAa,kBAGzCA;EACR;EAEO,kBAAAhC;AACNrK,SAAKyK,iBAAAA,GAELzK,KAAKiI,YAAYoE,YACf,GAAGrM,KAAKiI,YAAYoE,aAAarM,KAAKqM,YAAYC,KAAAA;EAErD;EAEO,mBAAA7B;AACNzK,SAAKiI,YAAYoE,YAAYrM,KAAKiI,YAAYoE,UAC3CE,QAAQ,iBAAiB,EAAA,EACzBD,KAAAA;EACJ;AAAA;",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "deltaTime", "this", "isRunning", "completed", "lerp", "value", "damp", "x", "y", "lambda", "dt", "t", "exp", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "stop", "onUpdate", "onStart", "Dimensions", "constructor", "wrapper", "content", "autoResize", "debounce", "debounceValue", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "debouncedResize", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "addEventListener", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "disconnect", "removeEventListener", "limit", "Emitter", "events", "event", "callbacks", "i", "length", "cb", "push", "_a", "filter", "LINE_HEIGHT", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "emitter", "emit", "deltaX", "deltaY", "onTouchMove", "onTouchEnd", "onWheel", "deltaMode", "windowWidth", "windowHeight", "onWindowResize", "passive", "on", "Lenis", "document", "documentElement", "wheelEventsTarget", "eventsTarget", "smoothWheel", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "prevent", "__experimental__naiveDimensions", "__isScrolling", "__isStopped", "__isLocked", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "isTouching", "options", "isStopped", "isLocked", "reset", "isClick", "isUnknownGesture", "composedPath", "slice", "indexOf", "rootElement", "find", "node", "hasAttribute", "call", "_b", "_c", "r", "classList", "_d", "contains", "_e", "preventDefault", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "Object", "assign", "programmatic", "onNativeScroll", "__resetVelocityTimeout", "__preventNextNativeScrollEvent", "lastScroll", "animatedScroll", "actualScroll", "lastVelocity", "direction", "sign", "lenisVersion", "body", "dimensions", "updateClassName", "userData", "time", "virtualScroll", "cleanUpClassName", "off", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "start", "advance", "target", "offset", "immediate", "lock", "onComplete", "force", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "setScroll", "fromTo", "modulo", "n", "d", "progress", "isSmooth", "className", "trim", "replace"]
}
